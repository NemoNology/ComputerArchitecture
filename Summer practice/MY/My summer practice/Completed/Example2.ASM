format MZ
org 100h
			; Для вывода числа на экран, необходимо его разделить на
			; отдельные цифры, преобразовать каждую цифру в символ, и
			; собрать символы в строку
 mov bl, 10		; Инициализируем делитель
 mov dl, [x]		; Загружаем значение выводимой переменной
 mov dh, 0		; ?
 mov di, str1		; Загружаем адрес первого символа выводимой строки
			; в требуемый индексный регистр
 add di, 4		; Увеличиваем адрес на 4 байта, чтобы не изменить
			; вспомогательную строку "a = "
			; Последовательность символов будем сохранять в стэк
 mov al, '$'		; Первым элементом (который будет выводиться последним)
 mov ah, 0		; загружаем символ конца строки
 push ax

label1:
	mov ax, dx	; Делим число на 10
	div bl
	mov dl, al	; Целую часть возвращаем в исходный регистр dx для
	mov dh, 0	; следующего «витка» цикла обработки
	mov al, ah	; Остаток является обрабатываемой цифрой, грузим его в al
	add al, 0x30	; Преобразуем цифру в символ, путем добавления кода,
			; соответствующего символу '0' (см. таблицу ASCII)
	mov ah, 0
	push ax 	; Загружаем символ цифры в стэк
	cmp dl, 0	; Проверяем конец числа

	jne label1	; Переходим на новый «виток»
			; Формируем строку из набора символов
label2:
	pop ax		; Извлекаем символ из стэка
	stosb		; Загружаем символ в память, выделенную для строки
	cmp al, '$'	; Проверяем последний символ строки
	jne label2



 mov ah,09h
 mov dx,str1
 int 21h

 mov ah,01h
 int 21h

 mov ah, 4ch
 mov al,  0h
 int 21h

str1 db "a = "		   ;Резервируем и частично инициализируем память под строку
x db 255		      ;Выделяем память и задаем восьмибитное число
